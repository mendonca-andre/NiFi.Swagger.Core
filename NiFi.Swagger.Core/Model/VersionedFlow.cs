/* 
 * NiFi Rest Api
 *
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * OpenAPI spec version: 1.9.1
 * Contact: dev@nifi.apache.org
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

namespace NiFi.Swagger.Core.Model
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.IO;
    using System.Runtime.Serialization;
    using System.Text;

    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;

    /// <summary>
    /// VersionedFlow
    /// </summary>
    [DataContract]
    public partial class VersionedFlow :  IEquatable<VersionedFlow>, IValidatableObject
    {
        /// <summary>
        /// The type of item.
        /// </summary>
        /// <value>The type of item.</value>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum TypeEnum
        {
            
            /// <summary>
            /// Enum Flow for value: Flow
            /// </summary>
            [EnumMember(Value = "Flow")]
            Flow = 1
        }

        /// <summary>
        /// The type of item.
        /// </summary>
        /// <value>The type of item.</value>
        [DataMember(Name="type", EmitDefaultValue=false)]
        public TypeEnum Type { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="VersionedFlow" /> class.
        /// </summary>
        [JsonConstructor]
        protected VersionedFlow() { }
        /// <summary>
        /// Initializes a new instance of the <see cref="VersionedFlow" /> class.
        /// </summary>
        /// <param name="name">The name of the item. (required).</param>
        /// <param name="description">A description of the item..</param>
        /// <param name="bucketIdentifier">The identifier of the bucket this items belongs to. This cannot be changed after the item is created. (required).</param>
        /// <param name="type">The type of item. (required).</param>
        public VersionedFlow(string name = default(string), string description = default(string), string bucketIdentifier = default(string), TypeEnum type = default(TypeEnum))
        {
            // to ensure "name" is required (not null)
            if (name == null)
            {
                throw new InvalidDataException("name is a required property for VersionedFlow and cannot be null");
            }
            else
            {
                this.Name = name;
            }
            // to ensure "bucketIdentifier" is required (not null)
            if (bucketIdentifier == null)
            {
                throw new InvalidDataException("bucketIdentifier is a required property for VersionedFlow and cannot be null");
            }
            else
            {
                this.BucketIdentifier = bucketIdentifier;
            }
            // to ensure "type" is required (not null)
            if (type == null)
            {
                throw new InvalidDataException("type is a required property for VersionedFlow and cannot be null");
            }
            else
            {
                this.Type = type;
            }
            this.Description = description;
        }
        
        /// <summary>
        /// An WebLink to this entity.
        /// </summary>
        /// <value>An WebLink to this entity.</value>
        [DataMember(Name="link", EmitDefaultValue=false)]
        public Link Link { get; private set; }

        /// <summary>
        /// An ID to uniquely identify this object.
        /// </summary>
        /// <value>An ID to uniquely identify this object.</value>
        [DataMember(Name="identifier", EmitDefaultValue=false)]
        public string Identifier { get; private set; }

        /// <summary>
        /// The name of the item.
        /// </summary>
        /// <value>The name of the item.</value>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// A description of the item.
        /// </summary>
        /// <value>A description of the item.</value>
        [DataMember(Name="description", EmitDefaultValue=false)]
        public string Description { get; set; }

        /// <summary>
        /// The identifier of the bucket this items belongs to. This cannot be changed after the item is created.
        /// </summary>
        /// <value>The identifier of the bucket this items belongs to. This cannot be changed after the item is created.</value>
        [DataMember(Name="bucketIdentifier", EmitDefaultValue=false)]
        public string BucketIdentifier { get; set; }

        /// <summary>
        /// The name of the bucket this items belongs to.
        /// </summary>
        /// <value>The name of the bucket this items belongs to.</value>
        [DataMember(Name="bucketName", EmitDefaultValue=false)]
        public string BucketName { get; private set; }

        /// <summary>
        /// The timestamp of when the item was created, as milliseconds since epoch.
        /// </summary>
        /// <value>The timestamp of when the item was created, as milliseconds since epoch.</value>
        [DataMember(Name="createdTimestamp", EmitDefaultValue=false)]
        public long? CreatedTimestamp { get; private set; }

        /// <summary>
        /// The timestamp of when the item was last modified, as milliseconds since epoch.
        /// </summary>
        /// <value>The timestamp of when the item was last modified, as milliseconds since epoch.</value>
        [DataMember(Name="modifiedTimestamp", EmitDefaultValue=false)]
        public long? ModifiedTimestamp { get; private set; }


        /// <summary>
        /// The access that the current user has to the bucket containing this item.
        /// </summary>
        /// <value>The access that the current user has to the bucket containing this item.</value>
        [DataMember(Name="permissions", EmitDefaultValue=false)]
        public Permissions Permissions { get; private set; }

        /// <summary>
        /// The number of versions of this flow.
        /// </summary>
        /// <value>The number of versions of this flow.</value>
        [DataMember(Name="versionCount", EmitDefaultValue=false)]
        public long? VersionCount { get; private set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class VersionedFlow {\n");
            sb.Append("  Link: ").Append(this.Link).Append("\n");
            sb.Append("  Identifier: ").Append(this.Identifier).Append("\n");
            sb.Append("  Name: ").Append(this.Name).Append("\n");
            sb.Append("  Description: ").Append(this.Description).Append("\n");
            sb.Append("  BucketIdentifier: ").Append(this.BucketIdentifier).Append("\n");
            sb.Append("  BucketName: ").Append(this.BucketName).Append("\n");
            sb.Append("  CreatedTimestamp: ").Append(this.CreatedTimestamp).Append("\n");
            sb.Append("  ModifiedTimestamp: ").Append(this.ModifiedTimestamp).Append("\n");
            sb.Append("  Type: ").Append(this.Type).Append("\n");
            sb.Append("  Permissions: ").Append(this.Permissions).Append("\n");
            sb.Append("  VersionCount: ").Append(this.VersionCount).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as VersionedFlow);
        }

        /// <summary>
        /// Returns true if VersionedFlow instances are equal
        /// </summary>
        /// <param name="input">Instance of VersionedFlow to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(VersionedFlow input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Link == input.Link ||
                    (this.Link != null &&
                    this.Link.Equals(input.Link))
                ) && 
                (
                    this.Identifier == input.Identifier ||
                    (this.Identifier != null &&
                    this.Identifier.Equals(input.Identifier))
                ) && 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Description == input.Description ||
                    (this.Description != null &&
                    this.Description.Equals(input.Description))
                ) && 
                (
                    this.BucketIdentifier == input.BucketIdentifier ||
                    (this.BucketIdentifier != null &&
                    this.BucketIdentifier.Equals(input.BucketIdentifier))
                ) && 
                (
                    this.BucketName == input.BucketName ||
                    (this.BucketName != null &&
                    this.BucketName.Equals(input.BucketName))
                ) && 
                (
                    this.CreatedTimestamp == input.CreatedTimestamp ||
                    (this.CreatedTimestamp != null &&
                    this.CreatedTimestamp.Equals(input.CreatedTimestamp))
                ) && 
                (
                    this.ModifiedTimestamp == input.ModifiedTimestamp ||
                    (this.ModifiedTimestamp != null &&
                    this.ModifiedTimestamp.Equals(input.ModifiedTimestamp))
                ) && 
                (
                    this.Type == input.Type ||
                    (this.Type != null &&
                    this.Type.Equals(input.Type))
                ) && 
                (
                    this.Permissions == input.Permissions ||
                    (this.Permissions != null &&
                    this.Permissions.Equals(input.Permissions))
                ) && 
                (
                    this.VersionCount == input.VersionCount ||
                    (this.VersionCount != null &&
                    this.VersionCount.Equals(input.VersionCount))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Link != null)
                    hashCode = hashCode * 59 + this.Link.GetHashCode();
                if (this.Identifier != null)
                    hashCode = hashCode * 59 + this.Identifier.GetHashCode();
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Description != null)
                    hashCode = hashCode * 59 + this.Description.GetHashCode();
                if (this.BucketIdentifier != null)
                    hashCode = hashCode * 59 + this.BucketIdentifier.GetHashCode();
                if (this.BucketName != null)
                    hashCode = hashCode * 59 + this.BucketName.GetHashCode();
                if (this.CreatedTimestamp != null)
                    hashCode = hashCode * 59 + this.CreatedTimestamp.GetHashCode();
                if (this.ModifiedTimestamp != null)
                    hashCode = hashCode * 59 + this.ModifiedTimestamp.GetHashCode();
                if (this.Type != null)
                    hashCode = hashCode * 59 + this.Type.GetHashCode();
                if (this.Permissions != null)
                    hashCode = hashCode * 59 + this.Permissions.GetHashCode();
                if (this.VersionCount != null)
                    hashCode = hashCode * 59 + this.VersionCount.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // CreatedTimestamp (long?) minimum
            if(this.CreatedTimestamp < (long?)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for CreatedTimestamp, must be a value greater than or equal to 1.", new [] { "CreatedTimestamp" });
            }

            // ModifiedTimestamp (long?) minimum
            if(this.ModifiedTimestamp < (long?)1)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ModifiedTimestamp, must be a value greater than or equal to 1.", new [] { "ModifiedTimestamp" });
            }

            // VersionCount (long?) minimum
            if(this.VersionCount < (long?)0)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for VersionCount, must be a value greater than or equal to 0.", new [] { "VersionCount" });
            }

            yield break;
        }
    }

}
