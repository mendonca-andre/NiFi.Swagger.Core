/* 
 * NiFi Rest Api
 *
 * The Rest Api provides programmatic access to command and control a NiFi instance in real time. Start and                                              stop processors, monitor queues, query provenance data, and more. Each endpoint below includes a description,                                             definitions of the expected input and output, potential response codes, and the authorizations required                                             to invoke each service.
 *
 * OpenAPI spec version: 1.9.1
 * Contact: dev@nifi.apache.org
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

namespace NiFi.Swagger.Core.Model
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.Runtime.Serialization;
    using System.Text;

    using Newtonsoft.Json;

    /// <summary>
    /// TransactionResultEntity
    /// </summary>
    [DataContract]
    public partial class TransactionResultEntity :  IEquatable<TransactionResultEntity>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="TransactionResultEntity" /> class.
        /// </summary>
        /// <param name="flowFileSent">flowFileSent.</param>
        /// <param name="responseCode">responseCode.</param>
        /// <param name="message">message.</param>
        public TransactionResultEntity(int? flowFileSent = default(int?), int? responseCode = default(int?), string message = default(string))
        {
            this.FlowFileSent = flowFileSent;
            this.ResponseCode = responseCode;
            this.Message = message;
        }
        
        /// <summary>
        /// Gets or Sets FlowFileSent
        /// </summary>
        [DataMember(Name="flowFileSent", EmitDefaultValue=false)]
        public int? FlowFileSent { get; set; }

        /// <summary>
        /// Gets or Sets ResponseCode
        /// </summary>
        [DataMember(Name="responseCode", EmitDefaultValue=false)]
        public int? ResponseCode { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name="message", EmitDefaultValue=false)]
        public string Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TransactionResultEntity {\n");
            sb.Append("  FlowFileSent: ").Append(this.FlowFileSent).Append("\n");
            sb.Append("  ResponseCode: ").Append(this.ResponseCode).Append("\n");
            sb.Append("  Message: ").Append(this.Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as TransactionResultEntity);
        }

        /// <summary>
        /// Returns true if TransactionResultEntity instances are equal
        /// </summary>
        /// <param name="input">Instance of TransactionResultEntity to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TransactionResultEntity input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.FlowFileSent == input.FlowFileSent ||
                    (this.FlowFileSent != null &&
                    this.FlowFileSent.Equals(input.FlowFileSent))
                ) && 
                (
                    this.ResponseCode == input.ResponseCode ||
                    (this.ResponseCode != null &&
                    this.ResponseCode.Equals(input.ResponseCode))
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.FlowFileSent != null)
                    hashCode = hashCode * 59 + this.FlowFileSent.GetHashCode();
                if (this.ResponseCode != null)
                    hashCode = hashCode * 59 + this.ResponseCode.GetHashCode();
                if (this.Message != null)
                    hashCode = hashCode * 59 + this.Message.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
